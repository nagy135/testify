version: '3.8'
services:
    database:
        image: "postgres"
        container_name: db
        env_file:
            - .env.postgres
        volumes:
            - database-data:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
    api:
        container_name: api
        restart: always
        build:
          context: ./testify-api/
          dockerfile: ../dockerfile/Dockerfile.api
        depends_on:
            - database
        volumes:
            - ./testify-api:/var/www/app/


    composer:
        container_name: composer
        image: composer:2.0
        stdin_open: true
        command: ["composer", "install"]
        volumes:
            - ./testify-api:/app

    nginx:
        image: nginx:1.19
        container_name: nginx
        ports:
            - '127.0.0.1:8081:80'
        volumes:
            - ./testify-api:/var/www/app/
            - ./testify-api/etc/nginx/sites-enabled/default:/etc/nginx/conf.d/default.conf
        depends_on:
            - api

# FRONTEND 

    react:
        container_name: react
        build:
          context: ./testify-react/
          dockerfile: ../dockerfile/Dockerfile.react
        volumes:
            - ./testify-react/src:/app/src
            - ./testify-react/public:/app/public
            - ./testify-react/assets:/app/assets
            - ./testify-react:/app/
        ports:
            - "3000:3000"
        stdin_open: true
        environment:
          - CHOKIDAR_USEPOLLING=true
volumes:
    database-data:
